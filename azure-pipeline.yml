trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  azure_connection: 'azurerm-connection'
  workingDir: '$(System.DefaultWorkingDirectory)/terraform/dev'
  backend_resource_group_name: "devops2-group5-storage-rg"
  backend_storage_account_name: "devops2group5tfstate"
  backend_container_name: "devops2-group5-tfstate-container"
  backend_rg_location: "japanwest"
  backend_key: "terraform.tfstate"

stages:
- stage: Terraform_init_plan
  displayName: 'Terraform init & Plan'
  jobs:
  - job: TerraformPlan
    displayName: 'Terraform init & Plan'
    steps:
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: 'latest'
    
    - task: TerraformTaskV4@4
      displayName: 'Terraform Init'
      inputs:
        provider: 'azurerm' # Or your chosen provider
        command: 'init'
        workingDirectory: '$(workingDir)' # Path to your tf files
        backendType: 'azurerm'
        backendServiceArm: '$(azure_connection)' 
        backendAzureRmStorageAccountName: '$(backend_storage_account_name)' 
        backendAzureRmResourceGroupName: $(backend_resource_group_name) 
        backendAzureRmContainerName: '$(backend_container_name)'
        backendAzureRmKey: '$(backend_key)'
